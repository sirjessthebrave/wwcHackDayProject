body {
    margin: 0;
    color:#fff;
}
a,
a:visited,
a:hover {
	color: #fff;
}
.navbar {
    position: absolute;
    height: 75px;
    width: 100%;
    border-bottom: 1px solid rgba(255, 255, 255, .5);
}
.logo {
    float: left;
	font-family: 'Montserrat', sans-serif;
	font-size: 30px;
	margin: 18px 20px 0;
}
.menu {
	float: right;
	color: #fff;
	margin: 29px 25px 28px 0;
}
.menu ul {
    margin: 0;
    padding: 0;
}
.link {
    display: inline-block;
    margin: 0 10px;
    font-family: 'Montserrat', sans-serif;
}
.links a{
  font-family: 'Montserrat', sans-serif;
}
.hero {
    width: 100%;
    height: 100vh;
    background: url(../images/hero.jpg) no-repeat;
    background-position: center;
    background-size: cover;
    overflow: hidden;
    display: table;
}
.container {
	display: table-cell;
	vertical-align: middle;
	text-align: center;
}
.heading {
	color: #fff;
	font-family: 'Montserrat', sans-serif;
	font-size: 50px;
}
.links {
	font-size: 10px;
}
.input[type=text] {
    width: 300px;
    -webkit-transition: width 0.4s ease-in-out;
    transition: width 0.4s ease-in-out;
}
/* When the input field gets focus, change its width to 100% */
input[type=text]:focus {
    width: 500px;
}
.searchBox {
    -webkit-appearance: none;
    border: 1px solid #fff;
    background-color: transparent;
    width: 300px;
    height: 30px;
    color: #fff;
}
::-webkit-input-placeholder {
   color: white;
}

:-moz-placeholder { /* Firefox 18- */
   color: white;  
}

::-moz-placeholder {  /* Firefox 19+ */
   color: white;  
}

:-ms-input-placeholder {  
   color: white;  
}
.encircle {
  width: 60px;
  height: 60px;
  border-radius: 60px;
  border: solid 2px white;
  position: absolute;
  bottom: 35px;
  left: 50%;
}

.arrow {
  margin: 0 auto;
  margin-top: 13px;
  width: 30px;
  height: 30px;
  background-size: contain;
}
.arrow:after {
    content: "";
    width: 20px;
    height: 20px;
    position: absolute;
    top: 25%;
    right: 18px;
    margin-top: -1px;
    transform: rotate(-45deg);
    border-bottom: 3px solid;
    border-left: 3px solid;
    color: #fff;
}

.bounce {
  -webkit-animation: bounce 2s infinite;
  -moz-animation: bounce 2s infinite;
  -ms-animation: bounce 2s infinite;
  animation: bounce 2s infinite;
}
.contentCTA {
	height: 400px;
	width: 100%;
	background-color: #fff;
}
.wrapper {
    position: relative;
    top: 50px;
    width: 1000px;
    margin: 0 auto;
}
.wrapper .heading {
	text-align: center;
	padding: 20px 0;
  border-bottom: solid 1px;
  margin-bottom: .5em;
}
.wrapper .copy {
	color: #fff;
	margin: 0 10px;
}
.read {
	float: left;
    width: 300px;
    height: 300px;
    padding: 20px;
    background: RGBA(52, 63, 109, 1);
    box-sizing: border-box;
}
.review {
	float: right;
	width: 300px;
    height: 300px;
    padding: 20px;
    background: RGBA(52, 63, 109, 1);
    box-sizing: border-box;
}
.publish {
	width: 300px;
    height: 300px;
    padding: 20px;
    background: RGBA(52, 63, 109, 1);
    box-sizing: border-box;
	margin: 0 auto;
}
.copy {
  font-family: 'Montserrat', sans-serif;
}
.Infographic {
	height: 100%;
	width: 100%;
	background-color: #fff;
}
.info-image {
  margin: 20px;
  opacity: 0;
  height: 155px;
}

#infographic {
  text-align: center;
  background-color: #fff;
}
.footer {
  background: RGBA(52, 63, 109, 1);
  font-family: 'Montserrat', sans-serif;
  padding: 2em 0;
}
.footer-menu {
  text-align: center;
}
.footer-menu ul {
  padding: 0;
}
.fa {
  padding: 20px;
}
.footer-menu button {
  border: 3px solid #2edd86;
  padding: 15px;
  background-color: #333;
  font-size: 16px;
  color: #fff;
  margin: 0 20px;
  font-family: 'Montserrat', sans-serif;
}
@-webkit-keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(-20px);
    -moz-transform: translateY(-20px);
    -ms-transform: translateY(-20px);
    transform: translateY(-20px);
  }
  60% {
    -webkit-transform: translateY(-10px);
    -moz-transform: translateY(-10px);
    -ms-transform: translateY(-10px);
    transform: translateY(-10px);
  }
}
@-moz-keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(-20px);
    -moz-transform: translateY(-20px);
    -ms-transform: translateY(-20px);
    transform: translateY(-20px);
  }
  60% {
    -webkit-transform: translateY(-10px);
    -moz-transform: translateY(-10px);
    -ms-transform: translateY(-10px);
    transform: translateY(-10px);
  }
}
@-ms-keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(-20px);
    -moz-transform: translateY(-20px);
    -ms-transform: translateY(-20px);
    transform: translateY(-20px);
  }
  60% {
    -webkit-transform: translateY(-10px);
    -moz-transform: translateY(-10px);
    -ms-transform: translateY(-10px);
    transform: translateY(-10px);
  }
}
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    transform: translateY(0);
  }
  40% {
    -webkit-transform: translateY(-20px);
    -moz-transform: translateY(-20px);
    -ms-transform: translateY(-20px);
    transform: translateY(-20px);
  }
  60% {
    -webkit-transform: translateY(-10px);
    -moz-transform: translateY(-10px);
    -ms-transform: translateY(-10px);
    transform: translateY(-10px);
  }
}

/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@-moz-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.fade-in {
  opacity: 0;
  /* make things invisible upon start */
  -webkit-animation: fadeIn ease-in 1;
  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation: fadeIn ease-in 1;
  animation: fadeIn ease-in 1;
  -webkit-animation-fill-mode: forwards;
  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
  -webkit-animation-duration: 1s;
  -moz-animation-duration: 1s;
  animation-duration: 1s;
}
